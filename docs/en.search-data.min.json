[{"id":0,"href":"/documentation/usage/getting-started/","title":"Getting Started","parent":"Usage","content":"This page tells you how to get started with Slides as Code CLI and theme, including installation and basic usage.\n   Installation Requirements CLI Installation  Homebrew Tarball Checking Installation   Theme Installation Create new Presentation Code your Presentation Slides Content Format Content Source and Rendering     Installation Requirements    There is no “best” way to install Slides as Code and its requirements on your computer. You should use the method that works best for your use case.\nThe sac command line is a Bash 4.x script targeting Linux, macOS (or WSL) and requires bash, hugo, jq, yq and coreutils.\nTo download and install them, Homebrew can be used on macOS (or Linux).\n$ brew install bash hugo jq yq coreutils In order to install these tools with another method, please follow related documentation:\n bash version 4.x and above hugo version 0.80 and above jq version 1.6 and above yq version 4.x and above coreutils version 8.x and above  CLI Installation    Homebrew    To download and install the latest version of sac command line, Homebrew can be used on macOS (or Linux).\n$ brew install sacproj/sac/sac Tarball    When installing from the tarball, you have to decide where to install the sac script (e.g /usr/local/bin).\n Download the tarball sac-cli.tar.gz from releases page. Unpack the tarball and copy sac script where you decide  Checking Installation    Execute following command to check requirements.\n$ sac doctor For each tool, sac doctor command checks the presence of it and outputs OK or KO as result. You have to install missing tools in order to get sac command line to work as expected.\nTheme Installation    In order to install latest Slides as Code Theme, execute following command:\n$ sac theme install github sacproj/sac-theme Then, check installed themes by executing following command:\n$ sac theme installed /usr/local/share/sac/themes └── sac └── x.y.z Create new Presentation    Create a new slides Deck with Slides as Code theme in my-awesome-slides directory:\n$ sac desk new my-awesome-slides sac-theme/x.y.z Go to created repository\n$ cd my-awesome-slides Create a new content files to organize your slide deck:\n$ sac content new cover.md my-awesome-slides/content/home/cover.md created $ sac content new intro.md my-awesome-slides/content/home/intro.md created $ sac content new info.md my-awesome-slides/content/home/info.md created $ sac content new qa.md my-awesome-slides/content/home/qa.md created In fact, slides content could be split into multiple Markdown files.\nSo, the directory layout is following:\nmy-awesome-slides/ ├── .gitignore ├── .vscode │ └── sac.code-snippets ├── config.yaml ├── content │ └── home │ ├── cover.md │ ├── info.md │ ├── intro.md │ └── qa.md └── static ├── charts ├── codes ├── diagrams ├── images ├── sessions ├── sounds └── videos  content/home directory contains the just created Markdown files. Directories inside static will contain elements such as images, source code used by the slides deck. config.yaml contains deck configuration (see Configuration page). sac.code.snippets contains VS Code snippets used by selected themes (see Snippets page).  Code your Presentation Slides    In order to code (with live update) or present your slides deck, execute following command.\n$ sac deck code Content Format    Hugo ❤️ Markdown, but there are times when Markdown falls short.\nInstead of writing raw HTML, Hugo created Shortcodes.\nA Shortcode is a simple snippet inside a content file that will be rendered using a predefined template (see Shortcodes page).\n{{\u0026lt; shortcode parameters \u0026gt;}} content {{\u0026lt; shortcode \u0026gt;}} VS Code snippets are available in order to ease the use of shortcodes (see Snippets page).\nContent Source and Rendering    Each content file should contain markup: html. The command sac content new is taking care of this for you.\n--- weight: 10 markup: \u0026#34;html\u0026#34; --- Markdown with Shortcodes content weight in content file\u0026rsquo;s front-matter is used to sort content files when concatenating them. The command sac content new is incrementing it by 10 on every execution.\nSlides as Code doesn\u0026rsquo;t use Hugo\u0026rsquo;s Markdown renderer, but Reveal.js Markdown renderer.\n"},{"id":1,"href":"/documentation/usage/","title":"Usage","parent":"Introduction","content":""},{"id":2,"href":"/documentation/usage/markdown/","title":"Markdown","parent":"Usage","content":"Slides as Code doesn\u0026rsquo;t use Hugo\u0026rsquo;s Markdown renderer, but Reveal.js Markdown renderer.\nSee Markdown page in Reveal.js documentation.\nHere is a useful link to generate markdown tables quickly: https://www.tablesgenerator.com/markdown_tables\n"},{"id":3,"href":"/documentation/usage/sub-theme/","title":"Sub-Theme","parent":"Usage","content":"TODO\n"},{"id":4,"href":"/documentation/reference/","title":"Reference","parent":"Introduction","content":""},{"id":5,"href":"/documentation/reference/cli/","title":"CLI","parent":"Reference","content":"    Usage Theme Management Deck Management Content Management     sac command line is used to:\n install, update, delete Slides as Code themes on your computer develop slides deck share slides  Usage    Usage: sac \u0026lt;command\u0026gt; Available commands: doctor Show information about the installed tooling theme Theme management deck Deck management content Content management Theme Management    theme sub-commands install Install theme github \u0026lt;owner\u0026gt;/\u0026lt;theme\u0026gt; Install theme from Github latest release git \u0026lt;git\u0026gt; [\u0026lt;tag\u0026gt;] Install theme from Git URL (with optional \u0026lt;tag\u0026gt;) tarball \u0026lt;tarball\u0026gt; Install theme from tarball installed List installed themes and versions remove \u0026lt;theme\u0026gt; \u0026lt;version\u0026gt; Remove installed \u0026lt;theme\u0026gt;/\u0026lt;version\u0026gt; Deck Management    deck sub-commands new \u0026lt;deck-directory\u0026gt; \u0026lt;theme\u0026gt;... Create a new slides deck with themes code Serve slides deck with live updates html Build slides deck in HTML into public directory pdf [\u0026lt;pdf\u0026gt;] [\u0026lt;timeout\u0026gt;] Build slides deck in PDF (default \u0026lt;pdf\u0026gt;=slides.pdf \u0026lt;timeout\u0026gt;=10000) Content Management    content sub-commands new \u0026lt;content-name.md\u0026gt; Create a new content file "},{"id":6,"href":"/documentation/reference/configuration/","title":"Configuration","parent":"Reference","content":"TODO\n"},{"id":7,"href":"/documentation/reference/shortcodes/","title":"Shortcodes","parent":"Reference","content":"Hugo loves Markdown because of its simple content format, but there are times when Markdown falls short.\nOften, content authors are forced to add raw HTML to Markdown content. Hugo authors think this contradicts the beautiful simplicity of Markdown’s syntax. Hugo created shortcodes to circumvent these limitations.\nA shortcode is a simple snippet inside a content file that will be rendered using a predefined template.\n   Slide Shortcodes  slide  menu-title iframe bg bg-color bg-image bg-video bg-video-loop bg-video-muted bg-iframe bg-size bg-position bg-repeat bg-opacity   menu-title  title     Component Shortcodes  asciinema  src autoplay speed idle-time-limit start-at title poster size   box  class title   chart  type src   code  lang src line-numbers focus   drawio  src page layers   quote  attribution   typed  type-speed start-delay back-speed smart-backspace shuffle back-delay loop loop-count show-cursor cursor-char   year   Icons Shortcodes  emoji fab far fas   Styles Shortcodes  color size   Format Shortcodes  div span ol ul li   Media Shortcodes  audio image  src alt width height class style caption caption-class   video  src autoplay width height controls class style   iframe       Slide Shortcodes    slide    Slide shortcode is used to set the title and the slide background.\nFormat\n{{\u0026lt; slide named-parameters \u0026gt;}} Named Parameters All named parameters are optional.\nmenu-title    Defines the title used in menu (default to first heading in the slide). Menu appears when clicking \u0026lsquo;M\u0026rsquo; button when presenting slides.\niframe    Defines overlay iframe URL.\nbg    Defines background with CSS function (e.g. bg=\u0026ldquo;linear-gradient(#571d96, #398ccb)\u0026quot;)\nbg-color    Defines background colour with one of palette color (see Configuration page) or CSS value.\nbg-image    Defines background image URL. Animated GIFs restart when the slide opens.\nbg-video    A single video URL, or a comma separated list of video URL.\nbg-video-loop    Flags if the video should play repeatedly (default to \u0026ldquo;false\u0026rdquo;).\nbg-video-muted    Flags if the audio should be muted (default to \u0026ldquo;false\u0026rdquo;).\nbg-iframe    Defines background iframe URL.\nbg-size    Defines background size with CSS value (default to \u0026ldquo;cover\u0026rdquo;).\nbg-position    Defines background position with CSS value (default to \u0026ldquo;center\u0026rdquo;).\nbg-repeat    Defines background repeat with CSS value (default to \u0026ldquo;no-repeat\u0026rdquo;).\nbg-opacity    Opacity of the background video on a 0 to 1 scale. 0 is transparent and 1 is fully opaque (default to \u0026ldquo;1\u0026rdquo;).\nmenu-title    Defines or overrides the title used in menu\nFormat\n{{\u0026lt; menu-title title \u0026gt;}} Positional Parameters All positional parameters are optional.\ntitle    Defines the title used in menu.\nComponent Shortcodes    asciinema    Renders the playback of Asciinema recorded terminal sessions.\nTo record terminal session, see Asciinema page\nFormat\n{{\u0026lt; asciinema named-parameters \u0026gt;}} Named Parameters All named parameters are optional except file that is mandatory.\nsrc    Defines source URL to load content from\nautoplay    Enables player to automatically start the session (default to \u0026ldquo;false\u0026rdquo;)\nspeed    Playback speed (Defaults to 1 (normal speed) 2 means 2x faster.\nidle-time-limit    Limit terminal inactivity to given number of seconds.\nstart-at    Starts playback at given time in second\ntitle    Defines the title above the player\nposter    Defines the timing in second from where the player previews the frame\nsize    Defines the size of the terminal font (default to \u0026ldquo;small\u0026rdquo;) Possible values are following\n small medium big any CSS value (e.g. 15px, 1.2em\u0026hellip;)  box    Render boxed text with three distinct box rendering styles: the default, rounded, and waved.\nFormat without title\n{{\u0026lt; box class \u0026gt;}} content {{\u0026lt; /box */}} Format with title\n{{\u0026lt;/* box class title \u0026gt;}} content {{\u0026lt; /box \u0026gt;}} Positional Parameters All positional parameters are optional.\nclass    Defines CSS class to use (if not set default rendering style is used).\nPossible values are following:\n rounded used for rounded rendering style waved used for waved rendering style  title    Defines box title.\nchart    Renders a chart with given data. Chart.js library is used to render charts.\nFormat for inline data\n{{\u0026lt; chart named-parameters \u0026gt;}} \u0026lt;!-- JSON-data --\u0026gt; {{\u0026lt; /chart \u0026gt;}} Format for external data\n{{\u0026lt; chart named-parameters /\u0026gt;}} Named Parameters All named parameters are optional except type.\ntype    Defines chart type. Possible values are following:\n line bar horizontalBar pie doughnut radar polarArea scatter  src    Defines source URL to load JSON data from See Chart.js documentation and samples.\ncode    Renders code-block with optional syntax highlighting. If focus is set, code block is automatically scrolled such that the lines of code to be focused on is centered.\nFormat for inline source\n{{\u0026lt; code named-parameters \u0026gt;}} source {{\u0026lt; /code \u0026gt;}} Format for external source\n{{\u0026lt; code named-parameters /\u0026gt;}} Named Parameters All named parameters are optional.\nlang    Defines language for syntax highlighting. List of supported languages is available at Highlight.js source code.\nsrc    Defines source URL to load content from.\nline-numbers    Flags if the line numbers are displayed (default to \u0026ldquo;false\u0026rdquo;).\nfocus    Defines focused lines in code block as pipe-separated list of line number and/or lines range. For instance\n \u0026ldquo;3\u0026rdquo; to focus line 3 \u0026ldquo;1,3,5\u0026rdquo; to focus lines 1,3 and 5 \u0026ldquo;1-5\u0026rdquo; to focus lines 1 to 5 \u0026ldquo;1,7-10\u0026rdquo; to focus lines 1 and lines 7 to 10  drawio    Renders draw.io diagram. For more information, read dedicated page: Draw.io page\nFormat\n{{\u0026lt; drawio named-parameters \u0026gt;}} Named Parameters All named parameters are optional.\nsrc    Defines source URL to load content from\npage    Displayed page index (default to 0)\nlayers    Space-separated list of visible layers (e.g. layers=\u0026ldquo;0 1\u0026rdquo;)\nquote    Renders a styled quotation with optional attribution.\nFormat without attribution\n{{\u0026lt; quote \u0026gt;}} content {{\u0026lt; /quote \u0026gt;}} Format with attribution\n{{\u0026lt; quote attribution \u0026gt;}} content {{\u0026lt; /quote \u0026gt;}} Positional parameters All positional parameters are optional.\nattribution    Defines quote\u0026rsquo;s attribution\ntyped    Types strings using Typed.js.\nEnter in any string, and watch it type at the speed you\u0026rsquo;ve set, backspace what it\u0026rsquo;s typed, and begin a new sentence for however many strings you\u0026rsquo;ve set.\nFormat\n{{\u0026lt; typed named-parameters \u0026gt;}} sentence 1 sentence 2 sentence 3 ... sentence N {{\u0026lt; /typed \u0026gt;}} Named Parameters All named parameters are optional.\ntype-speed    Defines type speed in millisecond (default to \u0026ldquo;50\u0026rdquo;)\nstart-delay    Defines time before typing in millisecond (default to \u0026ldquo;0\u0026rdquo;)\nback-speed    backspacing speed in millisecond (default to \u0026ldquo;30\u0026rdquo;)\nsmart-backspace    Enables only backspace what doesn\u0026rsquo;t match the previous string (default to \u0026ldquo;true\u0026rdquo;)\nshuffle    Enables shuffle the strings (default to \u0026ldquo;false\u0026rdquo;)\nback-delay    Defines time before backspacing in millisecond (default to \u0026ldquo;1000\u0026rdquo;)\nloop    Enables loop strings (default to \u0026ldquo;true\u0026rdquo;)\nloop-count    Defines amount of loops (default to \u0026ldquo;Infinity\u0026rdquo;)\nshow-cursor    Shows cursor (default to \u0026ldquo;true\u0026rdquo;)\ncursor-char    Defines character for cursor (default to \u0026ldquo;|\u0026quot;)\nyear    Renders current year.\nFormat\n{{\u0026lt; year \u0026gt;}} Icons Shortcodes    emoji    Renders Emoji emoticons by their names.\nFormat\n{{\u0026lt; emoji name \u0026gt;}} See Emoji Cheat Sheet for available emojis.\nfab    Renders FontAwesome brand icons by their names.\nFormat\n{{\u0026lt; fab name \u0026gt;}} See Brand icons gallery for icon names.\nfar    Renders FontAwesome regular icons by their names.\nFormat\n{{\u0026lt; far name \u0026gt;}} See Regular icons gallery for icon names.\nfas    Renders FontAwesome solid icons by their names.\nFormat\n{{\u0026lt; fas name \u0026gt;}} See Solid icons gallery for icon names.\nStyles Shortcodes    color    Modifies colour of a span.\nFormat\n{{\u0026lt; color value \u0026gt;}} size    Modifies font size of a span.\nFormat\n{{\u0026lt; size value \u0026gt;}} Format Shortcodes    div    Applies style to a flow of element by using CSS classes.\nFormat\n{{\u0026lt; div classes \u0026gt;}} content {{\u0026lt; /div \u0026gt;}} {{\u0026lt; div classes fragment-index \u0026gt;}} content {{\u0026lt; /div \u0026gt;}} span    Applies style to a text by using CSS classes.\nFormat\n{{\u0026lt; span classes \u0026gt;}} content {{\u0026lt; /span \u0026gt;}} {{\u0026lt; span classes fragment-index \u0026gt;}} content {{\u0026lt; /span \u0026gt;}} ol    Applies style to an ordered list by using CSS classes.\nFormat\n{{\u0026lt; ol classes \u0026gt;}} content {{\u0026lt; /ol \u0026gt;}} ul    Applies style to an unordered list by using CSS classes.\nFormat\n{{\u0026lt; ul classes \u0026gt;}} content {{\u0026lt; /ul \u0026gt;}} li    Applies style to a list item by using CSS classes.\nFormat\n{{\u0026lt; li classes \u0026gt;}}content{{\u0026lt; /li \u0026gt;}} {{\u0026lt; li classes fragment-index \u0026gt;}}content{{\u0026lt; /li \u0026gt;}} Media Shortcodes    audio    Play sound when slide is showing. Supported format are OGG, MP3, WAV.\nExample\n{{\u0026lt; audio src=\u0026#34;url\u0026#34; \u0026gt;}} image    Image could be inserted with Markdown syntax, but it can\u0026rsquo;t be resized.\nFormat {{\u0026lt; img named-parameters \u0026gt;}}\nNamed Parameters All named parameters are optional.\nsrc    Defines image URL\nalt    Defines alternative and hover text\nwidth    Defines image width\nheight    Defines image height\nclass    Defines CSS class\nstyle    Defines CSS style\ncaption    Defines caption text\ncaption-class    Defines CSS class for caption text\nExample\n{{\u0026lt; img src=\u0026#34;url\u0026#34; height=\u0026#34;600\u0026#34; \u0026gt;}} video    Play video when slide is showing.\nFormat\n{{\u0026lt; video named-parameters \u0026gt;}} Named Parameters All named parameters are optional.\nsrc    Defines video URL\nautoplay    Enables video autoplay when slide is displayed (default to \u0026ldquo;true\u0026rdquo;)\nwidth    Defines video width\nheight    Defines video height\ncontrols    Displays video controls (default to \u0026ldquo;true\u0026rdquo;)\nclass    Defines CSS class\nstyle    Defines CSS style\nExample\n{{\u0026lt; video src=\u0026#34;url\u0026#34; height=\u0026#34;600\u0026#34; \u0026gt;}} iframe    Embed a web page within the slide.\nExample\n\u0026lt;iframe height=\u0026#34;600\u0026#34; src=\u0026#34;url\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; By adding following on top of the slide, embedded web page can be\n refreshed on slide load and periodically refreshed.  In order to refresh only on slide load, set rate_in_ms to 0.\n\u0026lt;!-- .slide: data-iframe-refresh=\u0026#34;iframe_id[:rate_in_ms]\u0026#34; --\u0026gt; data-iframe-refresh parameter consists on the id of the iframe iframe_id and an optional refresh period rate_in_ms. The default refresh rate is equal to 5000 ms.\nExample\n\u0026lt;!-- .slide: data-iframe-refresh=\u0026#34;foo\u0026#34; --\u0026gt; \u0026lt;iframe id=\u0026#34;foo\u0026#34; height=\u0026#34;600\u0026#34; src=\u0026#34;url\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; "},{"id":8,"href":"/documentation/reference/css/","title":"Classes","parent":"Reference","content":"CSS classes could be applied\n to element by setting parameter in shortcode (if exists) to paragraph by using special comment after the paragraph \u0026lt;!-- .element class=\u0026quot;classes\u0026quot; --\u0026gt;  In following classes,  variable is equal to one of palette color (see Configuration page).\n"},{"id":9,"href":"/documentation/reference/snippets/","title":"Snippets","parent":"Reference","content":"TODO\n"},{"id":10,"href":"/documentation/misc/asciinema/","title":"Asciinema","parent":"Misc","content":"TODO\n"},{"id":11,"href":"/documentation/misc/drawio/","title":"Draw.io","parent":"Misc","content":"TODO\n"},{"id":12,"href":"/documentation/misc/fontawesome/","title":"FontAwesome","parent":"Misc","content":"FontAwesome modifiers    FontAwesome icons could be modified as following (see related link for further documentation):\n Sized or fixed-width by using CSS class (e.g. fa-2x, fa-fw) Used to replace list bullets Rotated Animated Stacked  "},{"id":13,"href":"/documentation/misc/iframe/","title":"Interactive iframes","parent":"Misc","content":"TODO\n"},{"id":14,"href":"/documentation/categories/","title":"Categories","parent":"Introduction","content":""},{"id":15,"href":"/documentation/","title":"Introduction","parent":"","content":"Slides as Code is a Hugo theme integrating an opinionated distribution of Reveal.js. You can find a demo at https://sacproj.github.io/demo/.\nSlides as Code comes with sac command line tool to ease its use.\nFeatures     Command line on Linux, macOS and WSL Content from Markdown, Shortcode Layout with Columns, Boxes Components  Code Presentation Typed.js Integration Asciinema Player Integration Draw.io (renamed to diagrams.net) Integration Charts.js Integration Reveal.js Menu   VS Code Snippets Composable Themes, Contents, Parameters and VS Code Snippets.  Inspirations    This distribution is inspired by following Hugo themes and projects using Reveal.js:\n Hugo Theme Reveal.js Reveal Hugo GitPitch  GitHub repositories     Theme: sacproj/sac-theme CLI: sacproj/sac-cli Documentation: sacproj/documentation Demo: sacproj/demo Homebrew Tap: sacproj/homebrew-sac ACME as sub-theme example: sacproj/sac-theme-acme  Acknowledgments    Data Essential to give me the time to develop this project.\n"},{"id":16,"href":"/documentation/misc/","title":"Misc","parent":"Introduction","content":""},{"id":17,"href":"/documentation/tags/","title":"Tags","parent":"Introduction","content":""}]