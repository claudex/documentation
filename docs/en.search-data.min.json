[{"id":0,"href":"/documentation/usage/getting-started/","title":"Getting Started","parent":"Usage","content":"This page tells you how to get started with Slides as Code CLI and theme, including installation and basic usage.\n   Installation Requirements CLI Installation  Homebrew Tarball Checking Installation   Theme Installation Create new Presentation Code your Presentation Slides  Content Format       Installation Requirements    There is no “best” way to install Slides as Code and its requirements on your computer. You should use the method that works best for your use case.\nThe sac command line is a Bash 4.x script targeting Linux, macOS (or WSL) and requires bash, hugo, jq, yq and coreutils.\nTo download and install them, Homebrew can be used on macOS (or Linux).\n$ brew install bash hugo jq yq coreutils In order to install these tools with another method, please follow related documentation:\n bash version 4.x and above hugo version 0.80 and above jq version 1.6 and above yq version 4.x and above coreutils version 8.x and above  CLI Installation    Homebrew    To download and install the latest version of sac command line, Homebrew can be used on macOS (or Linux).\n$ brew install sacproj/sac/sac Tarball    When installing from the tarball, you have to decide where to install the sac script (e.g /usr/local/bin).\n Download the tarball sac-cli.tar.gz from releases page. Unpack the tarball and copy sac script where you decide  Checking Installation    Execute following command to check requirements.\n$ sac doctor For each tool, sac doctor command checks the presence of it and outputs OK or KO as result. You have to install missing tools in order to get sac command line to work as expected.\nTheme Installation    In order to install latest Slides as Code Theme, execute following command:\n$ sac theme install github sacproj/sac-theme Then, check installed themes by executing following command:\n$ sac theme installed /usr/local/share/sac/themes └── sac └── x.y.z Create new Presentation    Create a new slides Deck with Slides as Code theme in my-awesome-slides directory:\n$ sac desk new my-awesome-slides sac-theme/x.y.z Go to created repository\n$ cd my-awesome-slides Create a new content files to organize your slide deck:\n$ sac content new cover.md my-awesome-slides/content/home/cover.md created $ sac content new intro.md my-awesome-slides/content/home/intro.md created $ sac content new info.md my-awesome-slides/content/home/info.md created $ sac content new qa.md my-awesome-slides/content/home/qa.md created In fact, slides content could be split into multiple Markdown files.\nSo, the directory layout is following:\nmy-awesome-slides/ ├── .gitignore ├── .vscode │ └── sac.code-snippets ├── config.yaml ├── content │ └── home │ ├── cover.md │ ├── info.md │ ├── intro.md │ └── qa.md └── static ├── charts ├── codes ├── diagrams ├── images ├── sessions ├── sounds └── videos  content/home directory contains the just created Markdown files. Directories inside static will contain elements such as images, source code used by the slides deck. config.yaml contains deck configuration (see Configuration page). sac.code.snippets contains VS Code snippets used by selected themes (see Snippets page).  Code your Presentation Slides    In order to code (with live update) or present your slides deck, execute following command.\n$ sac deck code Content Format    Hugo ❤️ Markdown, but there are times when Markdown falls short.\nInstead of writing raw HTML, Hugo created Shortcodes.\nA Shortcode is a simple snippet inside a content file that will be rendered using a predefined template\n{{\u0026lt; shortcode parameters \u0026gt;}} content {{\u0026lt; shortcode \u0026gt;}} VS Code snippets are available in order to ease the use of shortcodes.\n"},{"id":1,"href":"/documentation/usage/","title":"Usage","parent":"Introduction","content":""},{"id":2,"href":"/documentation/usage/sub-theme/","title":"Sub-Theme","parent":"Usage","content":"TODO\n"},{"id":3,"href":"/documentation/reference/","title":"Reference","parent":"Introduction","content":""},{"id":4,"href":"/documentation/reference/cli/","title":"CLI","parent":"Reference","content":"    Usage Theme Management Deck Management Content Management     sac command line is used to:\n install, update, delete Slides as Code themes on your computer develop slides deck share slides  Usage    Usage: sac \u0026lt;command\u0026gt; Available commands: doctor Show information about the installed tooling theme Theme management deck Deck management content Content management Theme Management    theme sub-commands install Install theme github \u0026lt;owner\u0026gt;/\u0026lt;theme\u0026gt; Install theme from Github latest release git \u0026lt;git\u0026gt; [\u0026lt;tag\u0026gt;] Install theme from Git URL (with optional \u0026lt;tag\u0026gt;) tarball \u0026lt;tarball\u0026gt; Install theme from tarball installed List installed themes and versions remove \u0026lt;theme\u0026gt; \u0026lt;version\u0026gt; Remove installed \u0026lt;theme\u0026gt;/\u0026lt;version\u0026gt; Deck Management    deck sub-commands new \u0026lt;deck-directory\u0026gt; \u0026lt;theme\u0026gt;... Create a new slides deck with themes code Serve slides deck with live updates html Build slides deck in HTML into public directory pdf [\u0026lt;pdf\u0026gt;] [\u0026lt;timeout\u0026gt;] Build slides deck in PDF (default \u0026lt;pdf\u0026gt;=slides.pdf \u0026lt;timeout\u0026gt;=10000) Content Management    content sub-commands new \u0026lt;content-name.md\u0026gt; Create a new content file "},{"id":5,"href":"/documentation/reference/configuration/","title":"Configuration","parent":"Reference","content":"TODO\n"},{"id":6,"href":"/documentation/reference/shortcodes/","title":"Shortcodes","parent":"Reference","content":"Hugo loves Markdown because of its simple content format, but there are times when Markdown falls short.\nOften, content authors are forced to add raw HTML to Markdown content. Hugo authors think this contradicts the beautiful simplicity of Markdown’s syntax. Hugo created shortcodes to circumvent these limitations.\nA shortcode is a simple snippet inside a part file that will be rendered using a predefined template.\n   Common Shortcodes  slide  menu-title iframe bg bg-color bg-image bg-video bg-video-loop bg-video-muted bg-iframe bg-size bg-position bg-repeat bg-opacity         Common Shortcodes    slide    Slide shortcode is used to set the title and the slide background.\nFormat\n{{\u0026lt; slide named-parameters \u0026gt;}} menu-title    Defines the title used in menu (default to first heading in the slide). Menu appears when clicking \u0026lsquo;M\u0026rsquo; button when presenting slides.\niframe    Defines overlay iframe URL.\nbg    Defines background with CSS function (e.g. bg=\u0026ldquo;linear-gradient(#571d96, #398ccb)\u0026quot;)\nbg-color    Defines background colour with one of palette color (see Configuration page) or CSS value.\nbg-image    Defines background image URL. Animated GIFs restart when the slide opens.\nbg-video    A single video URL, or a comma separated list of video URL.\nbg-video-loop    Flags if the video should play repeatedly (default to \u0026ldquo;false\u0026rdquo;).\nbg-video-muted    Flags if the audio should be muted (default to \u0026ldquo;false\u0026rdquo;).\nbg-iframe    Defines background iframe URL.\nbg-size    Defines background size with CSS value (default to \u0026ldquo;cover\u0026rdquo;).\nbg-position    Defines background position with CSS value (default to \u0026ldquo;center\u0026rdquo;).\nbg-repeat    Defines background repeat with CSS value (default to \u0026ldquo;no-repeat\u0026rdquo;).\nbg-opacity    Opacity of the background video on a 0 to 1 scale. 0 is transparent and 1 is fully opaque (default to \u0026ldquo;1\u0026rdquo;).\n"},{"id":7,"href":"/documentation/reference/css/","title":"Classes","parent":"Reference","content":"TODO\n"},{"id":8,"href":"/documentation/reference/snippets/","title":"Snippets","parent":"Reference","content":"TODO\n"},{"id":9,"href":"/documentation/categories/","title":"Categories","parent":"Introduction","content":""},{"id":10,"href":"/documentation/","title":"Introduction","parent":"","content":"Slides as Code is a Hugo theme integrating an opinionated distribution of Reveal.js. You can find a demo at https://sacproj.github.io/demo/.\nSlides as Code comes with sac command line tool to ease its use.\nFeatures     Command line on Linux, macOS and WSL Content from Markdown, Shortcode Layout with Columns, Boxes Components  Code Presentation Typed.js Integration Asciinema Player Integration Draw.io (renamed to diagrams.net) Integration Charts.js Integration Reveal.js Menu   VS Code Snippets Composable Themes, Contents, Parameters and VS Code Snippets.  Inspirations    This distribution is inspired by following Hugo themes and projects using Reveal.js:\n Hugo Theme Reveal.js Reveal Hugo GitPitch  GitHub repositories     Theme: sacproj/sac-theme CLI: sacproj/sac-cli Documentation: sacproj/documentation Demo: sacproj/demo Homebrew Tap: sacproj/homebrew-sac ACME as sub-theme example: sacproj/sac-theme-acme  Acknowledgments    Data Essential to give me the time to develop this project.\n"},{"id":11,"href":"/documentation/tags/","title":"Tags","parent":"Introduction","content":""}]